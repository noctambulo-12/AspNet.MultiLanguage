@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
}
@inject IViewLocalizer localizer

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">@localizer["¡Bienvenido!"]</h1>
    <p>
    <form id="cultureForm" asp-action="Index">
    <select onchange="SetCulture(this.value)" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
    </select>
    </form>
    </p>
    <p><h3 class="alert-dark">@ViewBag.Message</h3></p>
    <p>@localizer["Hoy es {0}", @DateTime.Today.ToLongDateString()]</p>
    <p>@localizer["Obtenga información sobre <a href='https://docs.microsoft.com/aspnet/core'> cómo compilar aplicaciones web con ASP.NET Core </a>."]</p>
</div>

<script>
    function SetCulture(selectedValue) {
        var culture = "/?culture=" + selectedValue;
        document.getElementById("cultureForm").action = culture;
        document.getElementById("cultureForm").submit();
    }
</script>
